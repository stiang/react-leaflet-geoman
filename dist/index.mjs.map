{"version":3,"file":"index.mjs","sources":["../node_modules/@react-leaflet/core/lib/context.js","../src/events/global.ts","../src/events/layer.ts","../src/events/map.ts","../src/events/reference.ts","../src/GeomanControls.ts"],"sourcesContent":["import { createContext, use } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport function useLeafletContext() {\n    const context = use(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","import type { Map } from 'leaflet'\n\nimport type { HandlersWithDebug, Method } from '../types'\n\nexport function globalEvents(\n  map: Map,\n  handlers: HandlersWithDebug,\n  method: Method\n) {\n  // Cut Mode\n  if (handlers.onGlobalCutModeToggled) {\n    map[method]('pm:globalcutmodetoggled', handlers.onGlobalCutModeToggled)\n  }\n\n  // Drag Mode\n  if (handlers.onGlobalDragModeToggled) {\n    map[method]('pm:globaldragmodetoggled', handlers.onGlobalDragModeToggled)\n  }\n\n  // Draw Mode\n  if (handlers.onGlobalDrawModeToggled) {\n    map[method]('pm:globaldrawmodetoggled', handlers.onGlobalDrawModeToggled)\n  }\n\n  // Edit Mode\n  if (handlers.onGlobalEditModeToggled) {\n    map[method]('pm:globaleditmodetoggled', handlers.onGlobalEditModeToggled)\n  }\n\n  // Misc Actions\n  if (handlers.onButtonClick) {\n    map[method]('pm:buttonclick', handlers.onButtonClick)\n  }\n  if (handlers.onActionClick) {\n    map[method]('pm:actionclick', handlers.onActionClick)\n  }\n  if (handlers.onKeyEvent) {\n    map[method]('pm:keyevent', handlers.onKeyEvent)\n  }\n  if (handlers.onLangChange) {\n    map[method]('pm:langchange', handlers.onLangChange)\n  }\n\n  // Remove Mode\n  if (handlers.onGlobalRemovalModeToggled) {\n    map[method](\n      'pm:globalremovalmodetoggled',\n      handlers.onGlobalRemovalModeToggled\n    )\n  }\n\n  // Rotate Mode\n  if (handlers.onGlobalRotateModeToggled) {\n    map[method](\n      'pm:globalrotatemodetoggled',\n      handlers.onGlobalRotateModeToggled\n    )\n  }\n}\n","import type { Layer } from 'leaflet'\n\nimport type { HandlersWithDebug, Method } from '../types'\n\nexport function layerEvents(\n  layer: Layer,\n  handlers: HandlersWithDebug,\n  method: Method\n) {\n  // Drawing Mode\n  if (handlers.onVertexAdded) {\n    layer[method]('pm:vertexadded', handlers.onVertexAdded)\n  }\n  if (handlers.onSnapDrag) {\n    layer[method]('pm:snapdrag', handlers.onSnapDrag)\n  }\n  if (handlers.onSnap) {\n    layer[method]('pm:snap', handlers.onSnap)\n  }\n  if (handlers.onUnsnap) {\n    layer[method]('pm:unsnap', handlers.onUnsnap)\n  }\n  if (handlers.onCenterPlaced) {\n    layer[method]('pm:centerplaced', handlers.onCenterPlaced)\n  }\n  if (handlers.onChange) {\n    layer[method]('pm:change', handlers.onChange)\n  }\n\n  // Edit Mode\n  if (handlers.onEdit) {\n    layer[method]('pm:edit', handlers.onEdit)\n  }\n  if (handlers.onUpdate) {\n    layer[method]('pm:update', handlers.onUpdate)\n  }\n  if (handlers.onEnable) {\n    layer[method]('pm:enable', handlers.onEnable)\n  }\n  if (handlers.onDisable) {\n    layer[method]('pm:disable', handlers.onDisable)\n  }\n  if (handlers.onVertexRemoved) {\n    layer[method]('pm:vertexremoved', handlers.onVertexRemoved)\n  }\n  if (handlers.onVertexClick) {\n    layer[method]('pm:vertexclick', handlers.onVertexClick)\n  }\n  if (handlers.onMarkerDragStart) {\n    layer[method]('pm:markerdragstart', handlers.onMarkerDragStart)\n  }\n  if (handlers.onMarkerDrag) {\n    layer[method]('pm:markerdrag', handlers.onMarkerDrag)\n  }\n  if (handlers.onMarkerDragEnd) {\n    layer[method]('pm:markerdragend', handlers.onMarkerDragEnd)\n  }\n  if (handlers.onLayerReset) {\n    layer[method]('pm:layerreset', handlers.onLayerReset)\n  }\n  if (handlers.onIntersect) {\n    layer[method]('pm:intersect', handlers.onIntersect)\n  }\n\n  // Drag Mode\n  if (handlers.onDragStart) {\n    layer[method]('pm:dragstart', handlers.onDragStart)\n  }\n  if (handlers.onDrag) {\n    layer[method]('pm:drag', handlers.onDrag)\n  }\n  if (handlers.onDragEnd) {\n    layer[method]('pm:dragend', handlers.onDragEnd)\n  }\n  if (handlers.onDragEnable) {\n    layer[method]('pm:dragenable', handlers.onDragEnable)\n  }\n  if (handlers.onDragDisable) {\n    layer[method]('pm:dragdisable', handlers.onDragDisable)\n  }\n\n  // Remove Mode\n  if (handlers.onLayerRemove) {\n    layer[method]('pm:remove', handlers.onLayerRemove)\n  }\n\n  // Cut Mode\n  if (handlers.onLayerCut) {\n    layer[method]('pm:cut', handlers.onLayerCut)\n  }\n\n  // Rotate Mode\n  if (handlers.onLayerRotateEnable) {\n    layer[method]('pm:rotateenable', handlers.onLayerRotateEnable)\n  }\n  if (handlers.onLayerRotateDisable) {\n    layer[method]('pm:rotatedisable', handlers.onLayerRotateDisable)\n  }\n  if (handlers.onLayerRotateStart) {\n    layer[method]('pm:rotatestart', handlers.onLayerRotateStart)\n  }\n  if (handlers.onLayerRotate) {\n    layer[method]('pm:rotate', handlers.onLayerRotate)\n  }\n  if (handlers.onLayerRotateEnd) {\n    layer[method]('pm:rotateend', handlers.onLayerRotateEnd)\n  }\n\n  // Text Mode\n  if (handlers.onTextChange) {\n    layer[method]('pm:textchange', handlers.onTextChange)\n  }\n}\n","import type { Map } from 'leaflet'\n\nimport { layerEvents } from './layer'\nimport type { HandlersWithDebug, Method } from '../types'\n\nexport function mapEvents(\n  map: Map,\n  handlers: HandlersWithDebug,\n  method: Method\n) {\n  // Cut\n  if (handlers.onMapCut) {\n    map[method]('pm:cut', (e) => {\n      layerEvents(e.layer, handlers, 'off')\n      layerEvents(e.layer, handlers, 'on')\n      if (handlers.onMapCut) handlers.onMapCut(e)\n    })\n  }\n\n  // Draw\n  if (handlers.onCreate) {\n    map[method]('pm:create', (e) => {\n      layerEvents(e.layer, handlers, 'off')\n      layerEvents(e.layer, handlers, 'on')\n      if (handlers.onCreate) handlers.onCreate(e)\n    })\n  }\n  if (handlers.onDrawStart) {\n    map[method]('pm:drawstart', handlers.onDrawStart)\n  }\n  if (handlers.onDrawEnd) {\n    map[method]('pm:drawend', handlers.onDrawEnd)\n  }\n\n  // Remove\n  if (handlers.onMapRemove) {\n    map[method]('pm:remove', handlers.onMapRemove)\n  }\n\n  // Rotate\n  if (handlers.onMapRotateEnable) {\n    map[method]('pm:rotateenable', handlers.onMapRotateEnable)\n  }\n  if (handlers.onMapRotateDisable) {\n    map[method]('pm:rotatedisable', handlers.onMapRotateDisable)\n  }\n  if (handlers.onMapRotate) {\n    map[method]('pm:rotate', handlers.onMapRotate)\n  }\n  if (handlers.onMapRotateStart) {\n    map[method]('pm:rotatestart', handlers.onMapRotateStart)\n  }\n  if (handlers.onMapRotateEnd) {\n    map[method]('pm:rotateend', handlers.onMapRotateEnd)\n  }\n}\n","import type { GeomanHandlers } from '../types'\n\nexport const reference = [\n  'onMapRemove',\n  'onLayerRemove',\n  'onMapCut',\n  'onLayerCut',\n  'onMapRotateEnable',\n  'onLayerRotateEnable',\n  'onMapRotateDisable',\n  'onLayerRotateDisable',\n  'onMapRotateStart',\n  'onLayerRotateStart',\n  'onMapRotate',\n  'onLayerRotate',\n  'onMapRotateEnd',\n  'onLayerRotateEnd',\n  'onGlobalDrawModeToggled',\n  'onDrawStart',\n  'onDrawEnd',\n  'onCreate',\n  'onGlobalEditModeToggled',\n  'onGlobalDragModeToggled',\n  'onGlobalRemovalModeToggled',\n  'onGlobalCutModeToggled',\n  'onGlobalRotateModeToggled',\n  'onLangChange',\n  'onButtonClick',\n  'onActionClick',\n  'onKeyEvent',\n  'onSnapDrag',\n  'onSnap',\n  'onUnsnap',\n  'onCenterPlaced',\n  'onEdit',\n  'onUpdate',\n  'onEnable',\n  'onDisable',\n  'onVertexAdded',\n  'onVertexRemoved',\n  'onVertexClick',\n  'onMarkerDragStart',\n  'onMarkerDrag',\n  'onMarkerDragEnd',\n  'onLayerReset',\n  'onIntersect',\n  'onChange',\n  'onTextChange',\n  'onDragStart',\n  'onDrag',\n  'onDragEnd',\n  'onDragEnable',\n  'onDragDisable',\n] as (keyof GeomanHandlers)[]\n","import '@geoman-io/leaflet-geoman-free'\nimport { useLayoutEffect, useEffect, useState } from 'react'\nimport { useLeafletContext } from '@react-leaflet/core'\n// import { useLeafletContext } from 'react-leaflet'\nimport type { LayerGroup } from 'leaflet'\n\nimport type { GeomanProps } from './types'\nimport { reference, layerEvents, globalEvents, mapEvents } from './events'\n\nexport default function GeomanControls({\n  options = {},\n  globalOptions = {},\n  pathOptions = {},\n  lang = 'en',\n  eventDebugFn,\n  onMount,\n  onUnmount,\n  ...handlers\n}: GeomanProps): null {\n  const [mounted, setMounted] = useState(false)\n  const [handlersRef, setHandlersRef] = useState<Record<string, Function>>(\n    process.env.NODE_ENV === 'development' ? handlers : {}\n  )\n  const { map, layerContainer } = useLeafletContext()\n  const container = (layerContainer as LayerGroup) || map\n\n  if (!container) {\n    console.warn('[GEOMAN-CONTROLS] No map or container instance found')\n    return null\n  }\n\n  useLayoutEffect(() => {\n    // add controls\n    if (!map.pm.controlsVisible()) {\n      map.pm.addControls(options)\n      if (onMount) onMount()\n      setMounted(true)\n    }\n    return () => {\n      map.pm.disableDraw()\n      map.pm.disableGlobalEditMode()\n      map.pm.disableGlobalRemovalMode()\n      map.pm.disableGlobalDragMode()\n      map.pm.disableGlobalCutMode()\n      map.pm.disableGlobalRotateMode()\n      map.pm.disableGlobalDragMode()\n      map.pm.disableGlobalCutMode()\n      if (onUnmount) onUnmount()\n      map.pm.removeControls()\n      setMounted(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    // set path options\n    if (mounted) map.pm.setPathOptions(pathOptions)\n  }, [pathOptions, mounted])\n\n  useEffect(() => {\n    // set global options\n    if (mounted)\n      map.pm.setGlobalOptions({ layerGroup: container, ...globalOptions })\n  }, [globalOptions, mounted])\n\n  useEffect(() => {\n    // set language\n    if (mounted) map.pm.setLang(lang)\n  }, [lang, mounted])\n\n  useEffect(() => {\n    // attach and remove event handlers\n    if (mounted) {\n      const withDebug = Object.fromEntries(\n        reference.map((handler) => [handler, handlers[handler] ?? eventDebugFn])\n      )\n      const layers = layerContainer\n        ? container.getLayers()\n        : map.pm.getGeomanLayers()\n      layers.forEach((layer) => layerEvents(layer, withDebug, 'on'))\n\n      globalEvents(map, withDebug, 'on')\n      mapEvents(map, withDebug, 'on')\n\n      return () => {\n        globalEvents(map, withDebug, 'off')\n        mapEvents(map, withDebug, 'off')\n        layers.forEach((layer) => layerEvents(layer, withDebug, 'off'))\n        setHandlersRef(handlers)\n      }\n    }\n  }, [\n    mounted,\n    process.env.NODE_ENV === 'development'\n      ? Object.entries(handlers).every(([k, fn]) => handlersRef[k] === fn)\n      : true,\n  ])\n\n  return null\n}\n"],"names":[],"mappings":"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"}